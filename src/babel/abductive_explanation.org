#+TITLE: Experiment: Abductive learning of partial explanations
#+PROPERTY: header-args :tangle ../tangled/abductive_explanation.py

* Abductive learning of partial explanations
** Imports
#+BEGIN_SRC python :tangle yes
import pandas as pd
import pysubgroup as ps
#+END_SRC
** Setup
*** Interpretable Scales
#+BEGIN_SRC python :tangle yes
ontology = pd.read_csv("scales/fruit_ontology_scale.csv",index_col=0)
visual = pd.read_csv("scales/fruit_visual_scale.csv",index_col=0)
#+END_SRC

*** Read Model
#+BEGIN_SRC python
model = pd.read_csv("scales/fruit_class/base_16_w_bin.csv",index_col=0)
model_neg = model.loc[visual.index]
model = model.loc[visual.index,[c for c in model if "+" in c]]
#+END_SRC

** Subgroup Detection Method
#+BEGIN_SRC python
def sg_detect(model,scale,target_name,a=1):
    searchdf = model.copy()
    searchdf[target_name] = scale[target_name]
    target = ps.BinaryTarget(target_name, True)
    searchspace = ps.create_selectors(searchdf, ignore=[target_name])
    task = ps.SubgroupDiscoveryTask(
        searchdf,
        target,
        searchspace,
        result_set_size=20,
        depth=10,
        qf=ps.StandardQF(a=a))
    result = ps.BeamSearch(beam_width=50).execute(task)
    return result.to_dataframe()
#+END_SRC
** Experiment
Explain Orange in terms of neurons
#+BEGIN_SRC python
sg = sg_detect(model,visual,'F:Orange')
print(sg.iloc[[0,1,11]])
#+END_SRC
Explain Apple in terms of neurons
#+BEGIN_SRC python
sg = sg_detect(model,ontology,'Ã„pfel')
print(sg.iloc[[0,1,4]])
#+END_SRC

Visual explanation for Neuron 13
#+BEGIN_SRC python
sg = sg_detect(visual,model_neg,'-13',a=0.2)
print(sg.iloc[[1,17]])
#+END_SRC
Ontology explanation for Neuron 13
#+BEGIN_SRC python
sg = sg_detect(ontology,model_neg,'-13',a=0.2)
print(sg.iloc[[0]])
#+END_SRC
